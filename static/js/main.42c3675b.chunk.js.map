{"version":3,"sources":["../../reactClickyGame/reactClickyGame/src/components/Card/index.js","../../reactClickyGame/reactClickyGame/src/components/Wrapper/index.js","../../reactClickyGame/reactClickyGame/src/components/Navbar/index.js","../../reactClickyGame/reactClickyGame/src/components/Jumbotron/index.js","../../reactClickyGame/reactClickyGame/src/App.js","../../reactClickyGame/reactClickyGame/src/index.js"],"names":["Card","props","react_default","a","createElement","className","onClick","clickCount","id","alt","name","src","image","Wrapper","children","Navbar","this","score","highscore","Component","Jumbotron","App","state","cards","gameOver","_this","setState","console","log","forEach","card","count","alert","concat","find","o","i","sort","Math","random","_this2","components_Navbar","components_Jumbotron","components_Wrapper","map","components_Card","key","ReactDom","render","src_App","document","getElementById"],"mappings":"irEAgBeA,SAbF,SAAAC,GACX,OAOEC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBAAgBC,QAAS,kBAAML,EAAMM,WAAWN,EAAMO,MACnEN,EAAAC,EAAAC,cAAA,OAAKK,IAAKR,EAAMS,KAAMC,IAAKV,EAAMW,WCNxBC,SAHC,SAAAZ,GACd,OAAOC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WAAWJ,EAAMa,YCe1BC,0LAdX,OACEb,EAAAC,EAAAC,cAAA,OAAKC,UAAU,0CACbH,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,MAAIC,UAAU,YAAd,oBACAH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,eACdH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,aAAd,UACUW,KAAKf,MAAMgB,MADrB,eACwCD,KAAKf,MAAMiB,oBARxCC,cCUNC,SAVG,kBAChBlB,EAAAC,EAAAC,cAAA,UAAQC,UAAU,UAChBH,EAAAC,EAAAC,cAAA,gCACAF,EAAAC,EAAAC,cAAA,+IC6DWiB,mNAzDbC,MAAQ,CACNC,QACAN,MAAO,EACPC,UAAW,KAGbM,SAAW,WAWT,OAVIC,EAAKH,MAAML,MAAQQ,EAAKH,MAAMJ,WAChCO,EAAKC,SAAS,CAAER,UAAWO,EAAKH,MAAML,OAAS,WAC7CU,QAAQC,IAAIZ,KAAKM,MAAMJ,aAG3BO,EAAKH,MAAMC,MAAMM,QAAQ,SAAAC,GACvBA,EAAKC,MAAQ,IAEfC,MAAK,uBAAAC,OAAwBR,EAAKH,MAAML,QACxCQ,EAAKC,SAAS,CAAET,MAAO,KAChB,KAGTV,WAAa,SAAAC,GACXiB,EAAKH,MAAMC,MAAMW,KAAK,SAACC,EAAGC,GACxB,GAAID,EAAE3B,KAAOA,EAAI,CACf,GAAuB,IAAnBe,EAAMa,GAAGL,MAMX,OALAR,EAAMa,GAAGL,MAAQR,EAAMa,GAAGL,MAAQ,EAClCN,EAAKC,SAAS,CAAET,MAAOQ,EAAKH,MAAML,MAAQ,GAAK,WAC7CU,QAAQC,IAAIZ,KAAKM,MAAML,SAEzBQ,EAAKH,MAAMC,MAAMc,KAAK,kBAAMC,KAAKC,SAAW,MACrC,EAEPd,EAAKD,uFAMJ,IAAAgB,EAAAxB,KACP,OACEd,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACqC,EAAD,CAAQxB,MAAOD,KAAKM,MAAML,MAAOC,UAAWF,KAAKM,MAAMJ,YACvDhB,EAAAC,EAAAC,cAACsC,EAAD,MACAxC,EAAAC,EAAAC,cAACuC,EAAD,KACG3B,KAAKM,MAAMC,MAAMqB,IAAI,SAAAd,GAAI,OACxB5B,EAAAC,EAAAC,cAACyC,EAAD,CACEtC,WAAYiC,EAAKjC,WACjBC,GAAIsB,EAAKtB,GACTsC,IAAKhB,EAAKtB,GACVI,MAAOkB,EAAKlB,mBAlDRO,cCHlB4B,IAASC,OAAO9C,EAAAC,EAAAC,cAAC6C,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.42c3675b.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./style.css\";\n\nconst Card = props => {\n  return (\n    // <div className=\"card\" onClick={() => props.clickCount(props.id)}>\n    //   <div className=\"img-container\">\n    //     <img alt={props.name} src={props.image} />\n    //   </div>\n    // </div>\n\n    <div className=\"img-container\" onClick={() => props.clickCount(props.id)}>\n      <img alt={props.name} src={props.image} />\n    </div>\n  );\n};\nexport default Card;\n","import React from \"react\";\nimport \"./style.css\";\n\nconst Wrapper = props => {\n  return <div className=\"wrapper\">{props.children}</div>;\n};\nexport default Wrapper;\n","import React, { Component } from \"react\";\r\nimport \"./Navbar.css\";\r\n\r\nclass Navbar extends Component {\r\n  render() {\r\n    return (\r\n      <nav className=\"navbar navbar-default navbar-fixed-top\">\r\n        <ul>\r\n          <li className=\"itemLeft\">Test Your Memory</li>\r\n          <li className=\"itemCenter\" />\r\n          <li className=\"itemRight\">\r\n            Score: {this.props.score} Highscore: {this.props.highscore}\r\n          </li>\r\n        </ul>\r\n      </nav>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Navbar;\r\n","import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nconst Jumbotron = () => (\r\n  <header className=\"header\">\r\n    <h1>Emoji Clicky Game!</h1>\r\n    <h2>\r\n      Click on any image to earn a point, but don't click on the same picture\r\n      more than once. Click all 12 pics, and you win.\r\n    </h2>\r\n  </header>\r\n);\r\n\r\nexport default Jumbotron;\r\n","import React, { Component } from \"react\";\nimport Card from \"./components/Card\";\nimport Wrapper from \"./components/Wrapper\";\nimport Navbar from \"./components/Navbar\";\nimport Jumbotron from \"./components/Jumbotron\";\nimport cards from \"./cards.json\";\nimport \"./index.css\";\n\nclass App extends Component {\n  // Setting this.state.cards to the cards json array\n  state = {\n    cards,\n    score: 0,\n    highscore: 0\n  };\n\n  gameOver = () => {\n    if (this.state.score > this.state.highscore) {\n      this.setState({ highscore: this.state.score }, function() {\n        console.log(this.state.highscore);\n      });\n    }\n    this.state.cards.forEach(card => {\n      card.count = 0;\n    });\n    alert(`Game Over! \\nscore: ${this.state.score}`);\n    this.setState({ score: 0 });\n    return true;\n  };\n\n  clickCount = id => {\n    this.state.cards.find((o, i) => {\n      if (o.id === id) {\n        if (cards[i].count === 0) {\n          cards[i].count = cards[i].count + 1;\n          this.setState({ score: this.state.score + 1 }, function() {\n            console.log(this.state.score);\n          });\n          this.state.cards.sort(() => Math.random() - 0.5);\n          return true;\n        } else {\n          this.gameOver();\n        }\n      }\n    });\n  };\n  // Map over this.state.cards and render a cardCard component for each card object\n  render() {\n    return (\n      <div>\n        <Navbar score={this.state.score} highscore={this.state.highscore} />\n        <Jumbotron />\n        <Wrapper>\n          {this.state.cards.map(card => (\n            <Card\n              clickCount={this.clickCount}\n              id={card.id}\n              key={card.id}\n              image={card.image}\n            />\n          ))}\n        </Wrapper>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDom from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\n\nReactDom.render(<App />, document.getElementById(\"root\"));"],"sourceRoot":""}